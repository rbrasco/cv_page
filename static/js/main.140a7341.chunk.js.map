{"version":3,"sources":["dictionary.js","components/tab/index.js","components/wButtons/index.js","components/starField/index.js","pages/pageCreator/index.js","App.js","serviceWorker.js","index.js"],"names":["info","personal","dict","paths","tabBar","tabs","className","map","tab","key","label","active","to","fontSize","writeTab","TabComponent","props","location","useLocation","pathname","replace","tabIndex","Object","keys","tabInfo","dir","path","indexOf","WButtons","rI","min","max","Math","floor","random","width","height","StarField","document","body","clientWidth","window","innerHeight","stars","range","Array","fill","forEach","_","i","show","p5","noStroke","sx","x","z","sy","y","r","ellipse","update","setup","canvasParentRef","createCanvas","parent","draw","resizeCanvas","background","translate","length","line","depth","array","PageCreator","subkey","printLines","App","isMobile","React","Component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.140a7341.chunk.js","sourcesContent":["const info = {\r\n  \"title\": \"Learn Code\",\r\n  \"author\":{\r\n    \"name\": \"Roger\",\r\n    \"study\": \"Mathmatics\"\r\n  },\r\n  \"codes\":[\"Reactjs\", \"JAVA\", \"C family\", \"Python\"],\r\n  \"contact\":{\r\n    \"instagram\": \"brascoroger\",\r\n    \"mail\": \"brascoroger@gmail.com\"\r\n  },\r\n  \"codes2\":[\"Reactjs\", \"JAVA\", \"C family\", \"Python\"],\r\n  \"codes3\":[\"Reactjs\", \"JAVA\", \"C family\", \"Python\"],\r\n  \"codes4\":[\"Reactjs\", \"JAVA\", \"C family\", \"Python\"],\r\n};\r\nconst personal = {\r\n  \"title\": \"ada\",\r\n  \"author\":{\r\n    \"name\": \"Roger\",\r\n    \"study\": \"Mathaskdfmatics\"\r\n  },\r\n  \"codes\":[\"Reactjs\", \"JAVA\", \"C family\", \"Python\"],\r\n  \"contact\":{\r\n    \"instagram\": \"mamlut\",\r\n    \"mail\": \"brascoroger@gmail.com\"\r\n  }\r\n};\r\n\r\nconst dict = {\r\n  \"info\": info,\r\n  \"personal\": personal,\r\n  \"teaching\": info,\r\n  \"experience\": personal,\r\n  \"contact\": info,\r\n\r\n};\r\n\r\nconst paths = {\r\n  \"info\": {\"dir\": \"homepage\", \"key\": \"info\", \"label\": \"info.yml\"},\r\n  \"personal\": {\"dir\": \"aboutme\", \"key\": \"personal\", \"label\": \"personal.yml\"},\r\n  \"teaching\": {\"dir\": \"teaching\", \"key\": \"teaching\", \"label\": \"teaching.yml\"},\r\n  \"experience\": {\"dir\": \"aboutme\", \"key\": \"experience\", \"label\": \"experience.yml\"},\r\n  \"contact\": {\"dir\": \"contact\", \"key\": \"contact\", \"label\": \"contact.yml\"},\r\n\r\n}\r\n\r\nexport {dict, paths};","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport {paths} from \"../../dictionary\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst writeTab = ({key, label, active = false}) => <div className={active ? \"tab\" : \"tab shadow\"}>\r\n  <Link className=\"link\" key={key} to={\"/\"+key}>\r\n    <button className=\"tabBttn\">\r\n      <div className=\"tabLabel\">{label}</div>\r\n    </button>\r\n  </Link>\r\n  <Link className={active? \"linkX\" : \"linkX dis\"} to={\"/\"} ><CloseIcon className={active ? \"xBttn\" : \"xBttn shadow\"} fontSize=\"small\"></CloseIcon></Link>\r\n</div>;\r\n\r\nconst tabBar = (tabs) => <div className=\"tabBar\">\r\n  {tabs.map(tab => writeTab(tab))}\r\n</div>;\r\n\r\nconst path = ({dir, label}) => <div className=\"path\">\r\n  <div className=\"path_text\">{\"rogerbras.co >\"}</div>\r\n  <div className=\"path_text\">{dir+ \" >\"}</div>\r\n  <div className=\"path_text\">{label}</div>\r\n</div>;\r\n\r\nconst TabComponent = (props) => {\r\n  const location = useLocation().pathname.replace(\"/\",\"\");\r\n  const tabIndex = Object.keys(paths).map(key => key);\r\n  const tabInfo = Object.keys(paths).map(key => ( {...paths[key], \"active\": location === key }))\r\n\r\n  return (\r\n    <div className=\"tabComponent\">\r\n      {tabBar(tabInfo)}\r\n      {location === \"\" ? null: path(tabInfo[tabIndex.indexOf(location)])}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabComponent;\r\n","import React from 'react';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport MaximizeIcon from '@material-ui/icons/Maximize';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst WButtons = () =>  <div className=\"wBttns\">\r\n    <div className=\"wSpace\"></div>\r\n    <div className=\"wTitle\">Personal Page Project - VS Code</div>\r\n    <div className=\"wIconsWrapper\">\r\n    <MinimizeIcon className=\"wIcons\" fontSize=\"small\"></MinimizeIcon>\r\n    <MaximizeIcon className=\"wIcons\" fontSize=\"small\"></MaximizeIcon>\r\n    <CloseIcon className=\"wIcons red\" fontSize=\"small\"></CloseIcon>\r\n    </div>\r\n</div>;\r\n\r\nexport default WButtons;","import React from 'react';\r\nimport Sketch from 'react-p5';\r\n\r\nconst rI = (min, max)=> Math.floor(Math.random() * (max - min + 1) + min);\r\nconst random = (width, height) => ({\"x\": rI(-width, width), \"y\": rI(-height, height), \"z\": rI(0, width)});\r\n\r\nconst StarField = () => {\r\n    let width = document.body.clientWidth;\r\n    let height = window.innerHeight;\r\n    const speed = 1;\r\n    let stars = {};\r\n    const n = 2000;\r\n    const range = Array(n).fill();\r\n    range.forEach((_, i) => stars = {...stars, [`${i}`]: random(width, height)});\r\n\r\n    const show = (p5, i) => {\r\n        p5.fill(255);\r\n        p5.noStroke();\r\n        const sx = p5.map(stars[i].x / stars[i].z, 0, 1, 0, width);\r\n        const sy = p5.map(stars[i].y / stars[i].z, 0, 1, 0, width);\r\n        const r = p5.map(stars[i].z, 0, width, 6, 0);\r\n        p5.ellipse(sx, sy, r, r);\r\n    }\r\n    const update =(p5, i) => {\r\n        stars[i].z -= speed;\r\n        if(stars[i].z < 1)\r\n            stars[i] = random(width, height);\r\n    }\r\n\r\n    const setup = (p5, canvasParentRef) => {\r\n      p5.createCanvas(width, height).parent(canvasParentRef); // use parent to render canvas in this ref (without that p5 render this canvas outside your component)\r\n    };\r\n    \r\n    const draw = p5 => {\r\n        width = document.body.clientWidth;\r\n        height = window.innerHeight;\r\n        p5.resizeCanvas(width, height, true);\r\n        p5.background(0);\r\n        p5.translate(width/2, height/2);\r\n        for(let i=0; i<range.length; i++)\r\n        {\r\n            update(p5, i);\r\n            show(p5, i);\r\n        }\r\n      \r\n    };\r\n\r\n    return (<Sketch setup={setup} draw={draw}/>);\r\n}\r\n\r\nexport default StarField;","import React from 'react';\r\n\r\nconst line = ({i, key, label, depth=0, array=false}) => <div className=\"line\" key={i}>\r\n  <div className=\"n_line\">{i}</div>\r\n  <div className={depth === 0? \"key_text\": \"key_text moved\"}>{key}</div>\r\n  {key === \"\" ? null : <div className=\"dots\">:</div>}\r\n  {array ? <div className=\"dash\"> - </div> : null}\r\n  <div className=\"label_text\">{label}</div>\r\n</div>;\r\n\r\nconst printLines = (info, i) => Object.keys(info).map((key) =>\r\n  typeof info[key] === \"string\" ?  line({\"i\": i++, \"key\": key, \"label\": info[key]}) : \r\n  <div key={i}> \r\n    {line({\"i\": i++, \"key\": key, \"label\": \"\"})}\r\n    {Object.keys(info[key]).map((subkey) => line({\"i\": i++, \"key\": info[key] instanceof Array ? \"\" : subkey, \"label\": info[key][subkey], \"depth\":1, \"array\": info[key] instanceof Array }))}\r\n  </div>  \r\n);\r\n\r\nconst PageCreator = ({info}) => {\r\n  let i=1;\r\n  return (\r\n    <div className=\"page\">\r\n        {printLines(info, i)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageCreator;\r\n","import React from 'react';\r\nimport { Route, MemoryRouter as Router, Switch } from 'react-router-dom';\r\nimport TabComponent from './components/tab';\r\nimport WButtons from './components/wButtons';\r\nimport StarField from './components/starField';\r\nimport PageCreator from './pages/pageCreator';\r\nimport {dict} from './dictionary';\r\nimport {isMobile} from 'react-device-detect';\r\n\r\nexport default class App extends React.Component {\r\n\r\n  componentDidMount () {\r\n\r\n  }\r\n  render () {\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"window\">\r\n          <WButtons />\r\n          <TabComponent />\r\n          <Switch>\r\n            {Object.keys(dict).map(key => <Route path={\"/\"+key} key={key}><PageCreator info={dict[key]}/></Route>)}\r\n          </Switch>\r\n        </div>\r\n        {isMobile? null : <StarField />}\r\n      </Router>\r\n    );\r\n\r\n  }\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}