{"version":3,"sources":["info.js","components/tab/index.js","components/wButtons/index.js","components/starSky/index.js","pages/pageCreator/index.js","App.js","serviceWorker.js","index.js"],"names":["infos","paths","tabBar","tabs","className","map","tab","key","label","active","to","fontSize","writeTab","TabComponent","props","location","useLocation","pathname","replace","tabIndex","Object","keys","tabInfo","path","indexOf","WButtons","StarSky","line","i","depth","array","PageCreator","info","subkey","Array","printLines","App","React","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a32014f7.chunk.js","sourcesContent":["const prova = {\r\n  \"title\": \"Learn Code\",\r\n  \"author\":{\r\n    \"name\": \"Roger\",\r\n    \"study\": \"Mathmatics\"\r\n  },\r\n  \"codes\":[\"Reactjs\", \"JAVA\", \"C family\", \"Python\"],\r\n  \"contact\":{\r\n    \"instagram\": \"brascoroger\",\r\n    \"mail\": \"brascoroger@gmail.com\"\r\n  }\r\n};\r\nconst prova2 = {\r\n  \"title\": \"ada\",\r\n  \"author\":{\r\n    \"name\": \"Roger\",\r\n    \"study\": \"Mathaskdfmatics\"\r\n  },\r\n  \"codes\":[\"Reactjs\", \"JAVA\", \"C family\", \"Python\"],\r\n  \"contact\":{\r\n    \"instagram\": \"mamlut\",\r\n    \"mail\": \"brascoroger@gmail.com\"\r\n  }\r\n};\r\n\r\nconst infos = {\r\n  \"homepage\": prova,\r\n  \"aboutme\": prova2,\r\n};\r\n\r\nconst paths = {\r\n  \"homepage\": \"info.yml\",\r\n  \"aboutme\": \"personal.yml\",\r\n}\r\n\r\nexport {infos, paths};","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport {paths} from \"../../info\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst writeTab = ({key, label, active = false}) =>\r\n<Link className=\"link\" key={label} to={\"/\"+key}>\r\n  <button className={active ? \"tab\" : \"tab shadow\"}>\r\n    <div className=\"tabName\">{label}</div>\r\n    <CloseIcon className={active ? \"xBttn\" : \"xBttn shadow\"} fontSize=\"small\"></CloseIcon>\r\n    </button>\r\n  </Link>;\r\n\r\nconst tabBar = (tabs) => <div className=\"tabBar\">\r\n  {tabs.map(tab => writeTab(tab))}\r\n</div>;\r\n\r\nconst path = ({key, label}) => <div className=\"path\">\r\n  <div className=\"path_text\">{\"rogerbras.co >\"}</div>\r\n  <div className=\"path_text\">{key+ \" >\"}</div>\r\n  <div className=\"path_text\">{label}</div>\r\n</div>;\r\n\r\nconst TabComponent = (props) => {\r\n  const location = useLocation().pathname.replace(\"/\",\"\");\r\n  const tabIndex = Object.keys(paths).map(key => key);\r\n  const tabInfo = Object.keys(paths).map(key => ( {\"key\": key, \"label\": paths[key], \"active\": location === key }))\r\n\r\n  return (\r\n    <div className=\"tabComponent\">\r\n      {tabBar(tabInfo)}\r\n      {location === \"\" ? null: path(tabInfo[tabIndex.indexOf(location)])}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabComponent;\r\n","import React from 'react';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport MaximizeIcon from '@material-ui/icons/Maximize';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst WButtons = () =>  <div className=\"wBttns\">\r\n    <div className=\"wTitle\">Personal Page Project - VS Code</div>\r\n    <MinimizeIcon className=\"wIcons\" fontSize=\"small\"></MinimizeIcon>\r\n    <MaximizeIcon className=\"wIcons\" fontSize=\"small\"></MaximizeIcon>\r\n    <CloseIcon className=\"wIcons red\" fontSize=\"small\"></CloseIcon>\r\n</div>;\r\n\r\nexport default WButtons;","import React from 'react';\r\n\r\nconst StarSky = () => <div className=\"sky\">\r\n    <div className=\"stars\"></div>\r\n    <div className=\"stars2\"></div>\r\n    <div className=\"stars3\"></div>\r\n</div>\r\n\r\nexport default StarSky;","import React from 'react';\r\n\r\nconst line = ({i, key, label, depth=0, array=false}) => <div className=\"line\" key={i}>\r\n  <div className=\"n_line\">{i}</div>\r\n  <div className={depth === 0? \"key_text\": \"key_text moved\"}>{key}</div>\r\n  {key === \"\" ? null : <div className=\"dots\">:</div>}\r\n  {array ? <div className=\"dash\"> - </div> : null}\r\n  <div className=\"label_text\">{label}</div>\r\n</div>;\r\n\r\nconst printLines = (info, i) => Object.keys(info).map((key) =>\r\n  typeof info[key] === \"string\" ?  line({\"i\": i++, \"key\": key, \"label\": info[key]}) : \r\n  <div key={i}> \r\n    {line({\"i\": i++, \"key\": key, \"label\": \"\"})}\r\n    {Object.keys(info[key]).map((subkey) => line({\"i\": i++, \"key\": info[key] instanceof Array ? \"\" : subkey, \"label\": info[key][subkey], \"depth\":1, \"array\": info[key] instanceof Array }))}\r\n  </div>  \r\n);\r\n\r\nconst PageCreator = ({key, info}) => {\r\n  let i=1;\r\n  return (\r\n    <div className=\"page\" key={key} >\r\n        {printLines(info, i)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageCreator;\r\n","import React from 'react';\r\nimport { Route, MemoryRouter as Router, Switch } from 'react-router-dom';\r\nimport TabComponent from './components/tab';\r\nimport WButtons from './components/wButtons';\r\nimport StarSky from './components/starSky';\r\nimport PageCreator from './pages/pageCreator';\r\nimport {infos} from './info';\r\n\r\nexport default class App extends React.Component {\r\n\r\n  componentDidMount () {\r\n\r\n  }\r\n  render () {\r\n\r\n    return (\r\n      <Router>\r\n        <StarSky />\r\n        <div className=\"window\">\r\n            <WButtons />\r\n            <TabComponent />\r\n            <Switch>\r\n              {Object.keys(infos).map(key => <Route path={\"/\"+key}><PageCreator key={key} info={infos[key]}/></Route>)}\r\n            </Switch>\r\n    </div>\r\n      </Router>\r\n    );\r\n\r\n  }\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}